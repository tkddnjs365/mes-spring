<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mes.mes_boot.system.program.mapper.ProgramMapper">
    <select id="getPrograms" resultType="com.mes.mes_boot.system.program.dto.ProgramDto">
        SELECT id
             , name
             , description As description
             , path        As path
             , created_at  As createdAt
             , updated_at  As updatedAt
        FROM programs a
    </select>

    <insert id="createProgram" parameterType="map">
        INSERT INTO programs (created_at, updated_at, name, description, path)
        SELECT NOW()
             , NOW()
             , #{progName}
             , #{description}
             , #{path}
    </insert>

    <delete id="deleteProgram" parameterType="map">
        DELETE
        FROM programs
        WHERE id = #{programId}
    </delete>

    <update id="updateProgram" parameterType="map">
        UPDATE programs
        SET name        = #{progName}
          , description = #{description}
          , path        = #{path}
        WHERE id = #{programId}
    </update>

    <select id="getCompanyPrograms" resultType="com.mes.mes_boot.system.program.dto.ProgCompDto">
        SELECT a.id         AS id
             , c.code       AS companyCode
             , a.prog_idx   AS programId
             , a.created_at AS createdAt
             , a.updated_at AS updatedAt
        FROM prog_link_company a
                 JOIN programs b ON a.prog_idx = b.id
                 JOIN companies c ON a.company_idx = c.id
        WHERE 1 = 1
          AND (c.code = #{companyCode} OR c.id = #{companyCode})
    </select>

    <insert id="connectCompanyProgram" parameterType="map">
        INSERT INTO prog_link_company (created_at, updated_at, company_idx, prog_idx)
        SELECT NOW()
             , NOW()
             , (SELECT id FROM companies WHERE code = #{companyCode})
             , #{programId}
    </insert>

    <delete id="disconnectCompanyProgram" parameterType="map">
        DELETE
        FROM prog_link_company
        WHERE company_idx = (SELECT id FROM companies WHERE code = #{companyCode})
          AND prog_idx = #{programId}
    </delete>

    <select id="getProgMenuCompany" resultType="com.mes.mes_boot.system.program.dto.ProgMenuDto">
        SELECT A.prog_idx As progIdx
             , B.name     As progName
             , E.name     As menuName
        FROM prog_link_company A
                 JOIN programs B ON A.prog_idx = B.id
                 JOIN menu_link_prog C ON A.prog_idx = C.prog_idx
                 JOIN menus D ON C.menu_idx = D.id
                 LEFT JOIN menus E ON D.parent_id = E.id
        WHERE A.company_idx = #{company_idx}
    </select>

    <select id="getMenuCategories" resultType="com.mes.mes_boot.system.program.dto.MenuDto">
        SELECT a.id          AS id
             , a.name        AS name
             , a.description AS description
             , a.sortorder   AS sortOrder
             , a.created_at  AS createdAt
             , a.updated_at  AS updatedAt
             , a.parent_id   AS parentId
        FROM menus a
        WHERE 1 = 1
    </select>

    <!-- 메뉴 생성 -->
    <insert id="createMenuCategory" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO menus (name, description, sortorder, parent_id)
        <choose>
            <when test="saveType == 'main'">
                VALUES (#{name}, #{description}, #{sortOrder}, NULL)
            </when>
            <otherwise>
                VALUES (#{name}, #{description}, #{sortOrder}, #{parentId})
            </otherwise>
        </choose>
    </insert>
    <!-- 대메뉴일 경우 parent_id 업데이트 -->
    <update id="updateMenuParentId" parameterType="map">
        UPDATE menus
        SET parent_id = id
        WHERE parent_id IS null
          AND name = #{name}
          AND description = #{description}
    </update>

    <select id="getMenuLinkPrograms" resultType="com.mes.mes_boot.system.program.dto.MenuProgDto">
        SELECT a.prog_idx   As id
             , a.menu_idx   As menuId
             , a.prog_idx   AS programId
             , a.created_at As createdAt
             , a.updated_at As updatedAt
        FROM menu_link_prog a
        WHERE A.menu_idx = #{menuId}
    </select>

    <insert id="connectMenuProgram" parameterType="map">
        INSERT INTO menu_link_prog (created_at, updated_at, menu_idx, prog_idx)
        SELECT NOW()
             , NOW()
             , #{menuId}
             , #{programId}
    </insert>

    <delete id="disconnectMenuProgram" parameterType="map">
        DELETE
        FROM menu_link_prog
        WHERE menu_idx = #{menuId}
          AND prog_idx = #{programId}
    </delete>

    <select id="getMenuProg" resultType="com.mes.mes_boot.system.program.dto.ProgMenuDto">
        SELECT A.menu_idx As menuIdx
             , A.prog_idx As progIdx
             , B.name     As progName
             , B.path     As progPath
        FROM menu_link_prog A
                 JOIN programs B ON A.prog_idx = B.id
    </select>
</mapper>